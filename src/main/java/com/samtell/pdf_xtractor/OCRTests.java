/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.samtell.pdf_xtractor;

import java.awt.HeadlessException;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.LinkedList;
import javax.imageio.ImageIO;
import org.apache.pdfbox.pdmodel.PDDocument;

/**
 *
 * @author samtell
 */
public class OCRTests extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public OCRTests() {
	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooser = new javax.swing.JFileChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("GO!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(166, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(141, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(70, 70, 70)
                .addComponent(jButton2)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
	try{
	    PDDocument doc = getPDFFromFileChooser();
	    
	    LinkedList<String> strs = getTextFromPDF(doc, Rotate.FULL);
	    
	    new File("output").mkdirs();
	    
	    for(int i = 0; i<strs.size(); i++){
		try(FileWriter fr = new FileWriter(outPath(i+1))){
		    new File(outPath(i+1)).createNewFile();
		    fr.write(strs.get(i));
		}
		
	    }
	    
	    
	    
	} catch(HeadlessException | IOException t) {
	    System.out.println(t);
	    System.exit(1);
	}
	
	System.exit(0);
	
    }//GEN-LAST:event_jButton1ActionPerformed

    private PDDocument getPDFFromFileChooser() throws IOException{
	chooser.showOpenDialog(this);
	return PDDocument.load(chooser.getSelectedFile());
    }
    
    public enum Rotate{LEFT, RIGHT, FULL, NONE}
    
    private LinkedList<String> getTextFromPDF(PDDocument doc, Rotate r) throws IOException{
	LinkedList<String> out = new LinkedList<>();
	
	ImageGrabber ig = new ImageGrabber();
	ig.processDoc(doc);
	

	for(BufferedImage bi : ig.getImages()){
	    
	    switch(r){
		case LEFT:  bi = Utils.rotate90ToLeft(bi);  break;
		case RIGHT: bi = Utils.rotate90ToRight(bi); break;
		case FULL:  bi = Utils.rotate180(bi);	    break;
		case NONE:  
	    }

	    new java.io.File("./tmp").mkdirs();
	    String path = "./tmp/img.png";
	    ImageIO.write(bi, "PNG", new File(path));

	    out.add(ImageReader.extractImage(path));
	}
	
	return out;
    }
    
    
    private String outPath(int i){
	return "output/p"+i+".txt";
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
	chooser.showOpenDialog(this);
	String path = chooser.getSelectedFile().getAbsolutePath();
	System.out.println(ImageReader.extractImage(path));
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
	/* Set the Nimbus look and feel */
	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
	/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
	 */
	try {
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
		if ("Nimbus".equals(info.getName())) {
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
	    java.util.logging.Logger.getLogger(OCRTests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	//</editor-fold>
	//</editor-fold>
	//</editor-fold>
	//</editor-fold>
	
	//</editor-fold>
	//</editor-fold>

	/* Create and display the form */
	java.awt.EventQueue.invokeLater(() -> {
	    new OCRTests().setVisible(true);
	});
    }
    
   
    



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser chooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
